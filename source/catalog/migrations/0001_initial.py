# Generated by Django 2.2.24 on 2021-10-05 01:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0025_auto_20210929_1112'),
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Item Name')),
                ('item_description', models.TextField(null=True, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='Item Description')),
                ('retail_price', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Retail Price (MSRP)')),
                ('is_available', models.BooleanField(default=False, verbose_name='Item is Available From Retail')),
                ('last_modified', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Epoch time of Last Update to Item')),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now, verbose_name='DateTime of the Last Update to Item')),
                ('api_item_Id', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='API Link/Identifier')),
            ],
        ),
        migrations.CreateModel(
            name='SponsorCatalogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Driver Point Value')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now, verbose_name='DateTime of the Date Added to Sponsor Catalog')),
                ('is_available_to_drivers', models.BooleanField(default=False, verbose_name='Is Item Available For Driver Redemption')),
                ('qty_in_cart', models.IntegerField(default=0, null=True, verbose_name='Number of  in users Cart')),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.CatalogItem')),
                ('sponsor_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.SponsorOrganization')),
            ],
        ),
        migrations.CreateModel(
            name='ItemReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Title of the review')),
                ('review', models.TextField(null=True, validators=[django.core.validators.MinLengthValidator(25)], verbose_name='Text for review')),
                ('likes', models.PositiveIntegerField(default=0, null=True, verbose_name='Number of likes for a review')),
                ('dislikes', models.PositiveIntegerField(default=0, null=True, verbose_name='Number of dislikes for a review')),
                ('when', models.DateTimeField(auto_now_add=True, verbose_name='time post was created')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Review has been approved by sponsor')),
                ('has_reviewed', models.BooleanField(default=False, verbose_name='This field should probably be deleted')),
                ('catalog_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.CatalogItem')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CatalogItemImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_link', models.URLField(verbose_name='Static Image Link')),
                ('big_image_link', models.URLField(verbose_name='Static Image Link')),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='catalog.CatalogItem')),
            ],
        ),
        migrations.CreateModel(
            name='CatalogFavorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_favorited', models.BooleanField(default=False, verbose_name='Has user favorited item')),
                ('catalog_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.CatalogItem')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
